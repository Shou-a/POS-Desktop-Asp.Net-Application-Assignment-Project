using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DataAccess
{
	#region Tables Struct
	public partial struct Tables
	{
		
		public static readonly string Discount = @"discounts";
        
		public static readonly string Ingredient = @"ingredients";
        
		public static readonly string InventoryLog = @"inventory_log";
        
		public static readonly string MyTbl = @"my_tbl";
        
		public static readonly string OrderDetail = @"order_details";
        
		public static readonly string Order = @"orders";
        
		public static readonly string ProductCategory = @"product_categories";
        
		public static readonly string ProductIngredient = @"product_ingredients";
        
		public static readonly string Product = @"products";
        
		public static readonly string User = @"users";
        
	}
	#endregion
    #region Schemas
    public partial class Schemas {
		
		public static TableSchema.Table Discount
		{
            get { return DataService.GetSchema("discounts", "Provider"); }
		}
        
		public static TableSchema.Table Ingredient
		{
            get { return DataService.GetSchema("ingredients", "Provider"); }
		}
        
		public static TableSchema.Table InventoryLog
		{
            get { return DataService.GetSchema("inventory_log", "Provider"); }
		}
        
		public static TableSchema.Table MyTbl
		{
            get { return DataService.GetSchema("my_tbl", "Provider"); }
		}
        
		public static TableSchema.Table OrderDetail
		{
            get { return DataService.GetSchema("order_details", "Provider"); }
		}
        
		public static TableSchema.Table Order
		{
            get { return DataService.GetSchema("orders", "Provider"); }
		}
        
		public static TableSchema.Table ProductCategory
		{
            get { return DataService.GetSchema("product_categories", "Provider"); }
		}
        
		public static TableSchema.Table ProductIngredient
		{
            get { return DataService.GetSchema("product_ingredients", "Provider"); }
		}
        
		public static TableSchema.Table Product
		{
            get { return DataService.GetSchema("products", "Provider"); }
		}
        
		public static TableSchema.Table User
		{
            get { return DataService.GetSchema("users", "Provider"); }
		}
        
	
    }
    #endregion
    #region View Struct
    public partial struct Views 
    {
		
    }
    #endregion
    
    #region Query Factories
	public static partial class DB
	{
        public static DataProvider _provider = DataService.Providers["Provider"];
        static ISubSonicRepository _repository;
        public static ISubSonicRepository Repository 
        {
            get 
            {
                if (_repository == null)
                    return new SubSonicRepository(_provider);
                return _repository; 
            }
            set { _repository = value; }
        }
        public static Select SelectAllColumnsFrom<T>() where T : RecordBase<T>, new()
	    {
            return Repository.SelectAllColumnsFrom<T>();
	    }
	    public static Select Select()
	    {
            return Repository.Select();
	    }
	    
		public static Select Select(params string[] columns)
		{
            return Repository.Select(columns);
        }
	    
		public static Select Select(params Aggregate[] aggregates)
		{
            return Repository.Select(aggregates);
        }
   
	    public static Update Update<T>() where T : RecordBase<T>, new()
	    {
            return Repository.Update<T>();
	    }
	    
	    public static Insert Insert()
	    {
            return Repository.Insert();
	    }
	    
	    public static Delete Delete()
	    {
            return Repository.Delete();
	    }
	    
	    public static InlineQuery Query()
	    {
            return Repository.Query();
	    }
	    	    
	    
	}
    #endregion
    
}
#region Databases
public partial struct Databases 
{
	
	public static readonly string Provider = @"Provider";
    
}
#endregion